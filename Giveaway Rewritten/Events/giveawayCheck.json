{
  "name": "giveawayCheck",
  "temp": "10",
  "event-type": "3",
  "_id": "eavvT",
  "actions": [
    {
      "behavior": "0",
      "interpretation": "1",
      "code": "const fs = require('fs');\nlet giveawaysDue = [];\nvar timeNow = Math.floor(Date.now() / 1000);\nvar counter = 0;\nvar interval;\nif (globalVars(\"giveawayRan\") == null) {\n    Actions.storeValue(1, 3, \"giveawayRan\", cache);\n\n    var giveawaySysData = Actions.giveawaySystem;\n\n    for (var key in giveawaySysData) {\n        if (giveawaySysData.hasOwnProperty(key)) {\n            let giveaways = giveawaySysData[key];\n            let dueGive = giveaways.filter(({\n                finishUnix\n            }) => finishUnix <= timeNow);\n            if (dueGive.length > 0) {\n                dueGive.forEach(async f => {\n                    giveawaysDue.push(f);\n                    giveaways.splice(giveaways.findIndex(e => e.id === f.id), 1)\n                });\n\n                fs.writeFile(\"./data/giveawaySystem/giveawayData.json\", JSON.stringify(giveawaySysData), function(err) {\n                    if (err) {\n                        return console.log(err);\n                    }\n                });\n            }\n        }\n    }\n    if (giveawaysDue.length > 0) {\n        interval = setInterval(drawWinners, 2000);\n    }\n\n}\n\nasync function drawWinners() {\n    var preCount = counter;\n    var channelToFetch = client.channels.cache.get(giveawaysDue[preCount][\"channel\"]);\n    if (channelToFetch != null) {\n        channelToFetch.messages.fetch(giveawaysDue[preCount][\"giveawayMessageID\"]).then(giveawayMessage => {\n            var giveawayEmojiCache = giveawayMessage.reactions.cache.get('ðŸŽ‰');\n            giveawayEmojiCache.users.fetch().then(async function(giveawayUsers) {\n                if (giveawayEmojiCache.count > 100) {\n                    for (i = 0; i < giveawayEmojiCache.count; i++) {\n                        var fetchedEmojiUsers = await giveawayEmojiCache.users.fetch({\n                            after: giveawayUsers.last().id\n                        });\n                        await giveawayUsers.concat(fetchedEmojiUsers);\n                    }\n                }\n\n                giveawayUsers = giveawayUsers.array();\n                giveawayUsers = await giveawayUsers.filter(object => object.id != client.user.id);\n                var numberOfWinners = parseInt(giveawaysDue[preCount][\"winner\"]);\n                var gw = giveawayMessage.embeds[0];\n\n                gw.color = 0x000000;\n                if (gw.fields.length == 6) {\n                    gw.fields[5].value = \"Ended\"\n                }\n                gw.description = \"**Giveaway Ended**\\n\\n\" + gw.description\n\n                var winnerArray = [];\n                var winnerText = \"\";\n                if (giveawayUsers.length > 0) {\n                    if (giveawayUsers.length > numberOfWinners) {\n                        for (var i = 0; i < numberOfWinners; i++) {\n                            var randomNumber = Math.floor(Math.random() * giveawayUsers.length);\n                            winnerArray.push(`${giveawayUsers[randomNumber]}`);\n                            giveawayUsers.splice(giveawayUsers.indexOf(randomNumber), randomNumber);\n                        }\n                    } else if (giveawayUsers.length <= numberOfWinners) {\n                        for (i = 0; i < giveawayUsers.length; i++) {\n                            winnerArray.push(`${giveawayUsers[i]}`);\n                        }\n                    }\n\n                    for (i = 0; i < winnerArray.length; i++) {\n                        winnerText = winnerText + winnerArray[i] + '\\n';\n                    }\n\n                    gw.description += `\\n\\nThe winners are..\\n${winnerText}`;\n                    giveawayMessage.edit({\n                        embed: gw\n                    });\n                    channelToFetch.send(`ðŸŽ‰ Congratulations! ðŸŽ‰ \\n ${winnerText} \\nThey have won **${giveawaysDue[preCount][\"itemGivingAway\"]}**`);\n\n                } else {\n                    gw.description += \"\\n\\nNo one entered the giveaway and thus no one won.\";\n                    giveawayMessage.edit({\n                        embed: gw\n                    });\n                    channelToFetch.send(`ðŸŽ‰ Giveaway Ended ðŸŽ‰\\n\\nNo one entered the giveaway and thus no one won.`);\n                }\n            })\n        })\n    }\n    \n    counter += 1;\n    if (counter >= giveawaysDue.length) {\n        clearInterval(interval);\n    }\n}\n\n// VersionCheck:2",
      "storage": "0",
      "varName": "",
      "name": "Run Script"
    },
    {
      "time": "7",
      "measurement": "1",
      "name": "Wait"
    },
    {
      "storage": "3",
      "varName": "giveawayRan",
      "changeType": "0",
      "value": "null",
      "name": "Control Variable"
    }
  ],
  "temp2": "America/New_York"
}