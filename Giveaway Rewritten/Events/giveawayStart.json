{
  "name": "giveawayStart",
  "temp": "",
  "event-type": "1",
  "_id": "jEKcf",
  "actions": [
    {
      "behavior": "0",
      "interpretation": "1",
      "code": "if (globalVars(\"giveawayStartAlreadyRan\") == null) {\n\n    Actions.storeValue(true, 3, \"giveawayStartAlreadyRan\", cache);\n\n    const fs = require('fs');\n    const request = require('request');\n    const Files = Actions.getDBM().Files;\n    var checkUpdates = true;\n\n    if (checkUpdates) {\n        request('https://raw.githubusercontent.com/ItzPike/DBM-Rawdata-Releases/master/Giveaway%20Rewritten/versionCheck.json', function(error, response, body) {\n            if (response.statusCode == 200) {\n                var allVersions = JSON.parse(body);\n\n                var commandVersions = {};\n                var eventVersions = {};\n                var commandKeys = [];\n                var eventKeys = [];\n\n                allVersions[\"commands\"].forEach(commandVer => {\n                    commandVersions[commandVer[0]] = commandVer[1];\n                    commandKeys.push(commandVer[0]);\n                });\n\n                allVersions[\"events\"].forEach(eventVer => {\n                    eventVersions[eventVer[0]] = eventVer[1];\n                    eventKeys.push(eventVer[0])\n                })\n\n                fs.readFile(\"./data/commands.json\", async function(err, data) {\n                    var data = JSON.parse(data);\n\n                    var systemCommands = await data.filter(command => command != null && commandKeys.includes(command[\"_id\"]));\n\n                    for (i = 0; i < systemCommands.length; i++) {\n                        var systemActionFind = await systemCommands[i][\"actions\"].filter(actionInfo => actionInfo.name = \"Run Script\" && actionInfo.code != null);\n\n                        if (systemActionFind.length != 0) {\n                            var versionCheckSplit = systemActionFind[0].code.split(\"VersionCheck:\");\n                            if (versionCheckSplit[1] != null && versionCheckSplit[1] != commandVersions[systemCommands[i][\"_id\"]] && !isNaN(versionCheckSplit[versionCheckSplit.length - 1])) {\n                                console.log(`[Giveaway Rewritten] The command ${systemCommands[i][\"name\"]} needs an update!`)\n                            }\n                        }\n                    }\n                })\n\n                fs.readFile(\"./data/events.json\", async function(err, data) {\n                    var data = JSON.parse(data);\n\n                    var systemEvent = await data.filter(event => event != null && eventKeys.includes(event[\"_id\"]));\n\n                    for (i = 0; i < systemEvent.length; i++) {\n                        var systemEventFind = await systemEvent[i][\"actions\"].filter(actionInfo => actionInfo.name = \"Run Script\" && actionInfo.code != null);\n\n                        if (systemEventFind.length != 0) {\n                            var versionCheckSplit = systemEventFind[0].code.split(\"VersionCheck:\");\n                            if (versionCheckSplit != null && versionCheckSplit[versionCheckSplit.length - 1] != eventVersions[systemEvent[i][\"_id\"]] && !isNaN(versionCheckSplit[versionCheckSplit.length - 1])) {\n                                console.log(`[Giveaway Rewritten] The event ${systemEvent[i][\"name\"]} needs an update!`)\n                            }\n                        }\n                    }\n                })\n            }\n        });\n    }\n\n    if (globalVars(\"giveawaySystemMoved\") == null) {\n        Files.saveGlobalVariable(\"giveawaySystemMoved\", true);\n\n        if (!fs.existsSync(`./data/giveawaySystem`)) {\n            fs.mkdirSync(`./data/giveawaySystem`);\n        }\n\n        [\"giveawayData\"].forEach(fileName => {\n            if (fs.existsSync(`./data/${fileName}.json`)) {\n                fs.renameSync( `./data/${fileName}.json`, `./data/giveawaySystem/${fileName}.json`);\n            }\n        });\n    }\n\n    if (!fs.existsSync('./data/giveawaySystem/giveawayData.json')) {\n        fs.writeFile(\"./data/giveawaySystem/giveawayData.json\", \"{}\", function(err) {\n            if (err) {\n                return console.log(err);\n            }\n            \n            Actions.giveawaySystem = {};\n        });\n    } else {\n        fs.readFile('./data/giveawaySystem/giveawayData.json', async function read(err, data) {\n            if (err) {\n                throw err;\n            }\n\n            Actions.giveawaySystem = JSON.parse(data);\n        })\n    }\n}\n\n// VersionCheck:2",
      "storage": "0",
      "varName": "",
      "name": "Run Script"
    }
  ]
}